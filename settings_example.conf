[sccm]
username = username
password = password
report_computers = http://example.com/xml_computers
report_network = http://example.com/xml_network
report_edr = http://example.com/xml_edr

[medigate]
url = https://api.medigate.io/api/v1/
apikey = yourAPIkey

[ldap]
laps_user = Administrator
domain = my.example.com
bind_dn = cn=Administrator,cn=Users,dc=my,dc=example,dc=com
password = randompassword
ldap_base = dc=my,dc=example,dc=com
search_bases = ou=Computers,dc=my,dc=example,dc=com
ldap_filter = (&(objectCategory=computer))

[ldap_two]
laps_user = Administrator
domain = other.example.com
bind_dn = cn=Administrator,cn=Users,dc=other,dc=example,dc=com
password = randompassword
ldap_base = dc=other,dc=example,dc=com
search_bases = ou=Computers,dc=other,dc=example,dc=com
ldap_filter = (&(objectCategory=computer))

[oracle]
host = oracledb
db = mydb
user = myuser
password = mypassword

[redcap]
url = https://redcap.example.com
token = randomtoken

[csv]
input = /home/user/input
output = /home/user/output
sender = sender@example.com
recipient = recipient@example.com
server = smtp.example.com
server_port = 25

[snipe-it]
#Required
url = https://snipe-it.example.com
apikey = yourAPIkey
techs = alice bob

[jamf]
# This entire section is Required
url = https://jss.example.com:8443
username = username
password = password

[tenable]
url = tenable.example.com
username = username
password = password

# EDIT THESE FIELDS SO THEY CORRESPOND WITH THE CUSTOM FIELD DB COLUMN NAMES IN YOUR SNIPE-IT INSTANCE
[Linux-api-mapping]
# REQUIRED
asset_tag = product_uuid
serial = product_serial
model = product_name
manufacturer = system_vendor
# For each interfaces you want to map, add a new line with the mac address
mac_addresses = | {{ data.values() | selectattr('macaddress', 'defined') | map(attribute='macaddress') | list }}
operating_system = distribution
os_type = | {{ 'Linux' }}
os_version = distribution_version
os_build = kernel
ram = memtotal_mb
cpu = processor 2
# storage =
# current_user = user_sessions 0 UserName
# domain =
# org_unit =
edr = | {{ 'ClamAV' }}
management = | {{ 'Ansible ' }}
ip_address = default_ipv4 address

[Darwin-api-mapping]
# REQUIRED
asset_tag = system_info SPHardwareDataType | {{ var | map(attribute='platform_UUID') | first }}
serial = system_info SPHardwareDataType | {{ var | map(attribute='serial_number') | first }}
model = system_info SPHardwareDataType | {{ var | map(attribute='machine_model') | first }}
manufacturer = | {{ 'Apple' }}
# For each interfaces you want to map, add a new line with the mac address
mac_addresses = | {{ clean_mac(data.values() | selectattr('macaddress', 'defined') | map(attribute='macaddress') | list) }}
operating_system = system_info SPSoftwareDataType | {{ ((var | map(attribute='os_version') | first).split(' '))[0] }}
os_type = | {{ 'Other' }}
os_version = system_info SPSoftwareDataType | {{ ((var | map(attribute='os_version') | first).split(' '))[1] }}
os_build = system_info SPSoftwareDataType | {{ ((var | map(attribute='os_version') | first).split('('))[1].strip(')') }}
ram = system_info SPHardwareDataType | {{ (((var | map(attribute='physical_memory') | first).split(' '))[0] | int) * 1024 }}
cpu = system_info SPHardwareDataType | {{ var | map(attribute='chip_type') | first }}
edr = | {{ 'XProtect' }}
management = | {{ 'Ansible ' }}
ip_address = all_ipv4_addresses | {{ (var | last) if var }}

[Win32NT-api-mapping]
# # REQUIRED
# REQUIRED
asset_tag = machine_id
serial = product_serial
model = product_name
manufacturer = system_vendor
# For each interfaces you want to map, add a new line with the mac address
mac_addresses = interfaces | {{ var | selectattr('macaddress', 'defined') | map(attribute='macaddress') | list }}
operating_system = distribution
os_type = | {{ 'Windows' }}
os_version = distribution_version
os_build = kernel
ram = memtotal_mb
cpu = processor 2
# storage =
# current_user = user_sessions 0 UserName
domain = windows_domain | {{ var | upper | replace('.ROCHESTER.EDU', '') }}
# org_unit =
edr = | {{ 'Windows Defender' }}
management = | {{ 'Ansible ' }}
ip_address = interfaces | {{ var | selectattr('default_gateway', 'string') | map(attribute='ipv4.address') | first }}
